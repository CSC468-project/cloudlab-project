#!/bin/bash
# This script sets up k8s on each node and then builds
# containers on the main node for cluster distribution.


gitroot="/local/repository/DockerFiles/"
githash="$(cd $gitroot;git rev-parse --verify HEAD)"
export PATH="/sbin:$PATH"

# Upgrade packages
dpkg_options="-o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\""
sudo apt update
#&& sudo apt upgrade -y ${dpkg_options}

# Install some packages
sudo apt install -y $dpkg_options apache2 htop tmux git docker.io curl git 

# Start by enabling docker service
systemctl enable docker --now

# Install kubernetes
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
apt-get install -y kubeadm kubelet kubectl
#apt-mark hold kubeadm kubelet kubectl
kubeadm version

# Launch Kubernetes
sudo swapoff â€“a # See https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory
kubeadm init --pod-network-cidr=10.0.0.0/24
mkdir -p $HOME/.kube

# Exit here for non control node
if [[ "$(hostname)" == *"worker"* ]]; then
	exit
fi 

# Build our containers
echo -e "Building containers"
containers=(djangoct)
(
	cd $GITROOT
	for ct in ${containers[@]}; do
		echo -e "\tBuilding ${ct}..."
		docker build -t ct -f ct .
		docker image tag $ct "$ct":"$githash"
	done
)
echo -e "\tdone."

# Launch kubeadm
kubeadm init

# Await running workers


# Launch containers on workers

